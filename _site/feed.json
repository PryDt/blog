{
    "version": "https://jsonfeed.org/version/1",
    "title": "Pry's Blog",
    "home_page_url": "prydt.xyz/b/",
    "feed_url": "prydt.xyz/b/feed.json",
    "description": "It's a blog... what more can I say?",
    "icon": "prydt.xyz/b/apple-touch-icon.png",
    "favicon": "prydt.xyz/b/favicon.ico",
    "expired": false,
    
    "author":  {
        "name": "Pranoy Dutta",
        "url": "prydt.xyz",
        "avatar": null
    },
    
"items": [
    
        {
            "id": "prydt.xyz/b/2020/06/16/installing-spike.html",
            "title": "Installing the Spike RISC-V Simulator",
            "summary": "How to install Spike on a Linux distro",
            "content_text": "Spike is a RISC-V Simulator. Here are the steps to installing Spike from source for 32bit simulation.Dependencies:  Device Tree Compiler# Arch Linuxsudo pacman -S dtc# Ubuntu / Debiansudo apt install device-tree-compilerInstalling SpikeMake a new directory for Spikemkdir RISCVcd RISCVClone the repos for the RISCV GNU toolchain, proxy kernel (pk), and Spike itselfgit clone --recursive https://github.com/riscv/riscv-gnu-toolchaingit clone https://github.com/riscv/riscv-pkgit clone https://github.com/riscv/riscv-isa-simSet environment variables (preferably move these commands into bashrc, zshrc, or something similar)export RISCV=/path/from/home/to/RISCVexport PATH=$PATH:$RISCV/binBuild the toolchain (this will take a while so make some tea or something)cd riscv-gnu-toolchainmkdir buildcd build../configure --prefix=$RISCV --with-arch=rv32imakeNow, to build the Proxy Kernelcd ../riscv-pkmkdir buildcd build../configure --prefix=$RISCV --host=riscv32-unknown-elfmakemake installFinally to build Spikecd ../riscv-isa-simmkdir buildcd build../configure --prefix=$RISCV --enable-histogrammakemake installYou are done!! To test if your install is working correctly use the following:riscv32-unknown-elf-gcc helloworld.c # where helloworld.c is any C programRISCV/riscv-isa-sim/build/spike --isa=RV32IMAC RISCV/riscv-pk/build/pk a.out",
            "content_html": "<p>Spike is a RISC-V Simulator. Here are the steps to installing Spike from source for 32bit simulation.</p><p>Dependencies:</p><ul>  <li>Device Tree Compiler</li></ul><pre><code class=\"language-commandline\"># Arch Linuxsudo pacman -S dtc# Ubuntu / Debiansudo apt install device-tree-compiler</code></pre><p>Installing Spike</p><p>Make a new directory for Spike</p><pre><code>mkdir RISCVcd RISCV</code></pre><p>Clone the repos for the RISCV GNU toolchain, proxy kernel (pk), and Spike itself</p><pre><code>git clone --recursive https://github.com/riscv/riscv-gnu-toolchaingit clone https://github.com/riscv/riscv-pkgit clone https://github.com/riscv/riscv-isa-sim</code></pre><p>Set environment variables (preferably move these commands into bashrc, zshrc, or something similar)</p><pre><code>export RISCV=/path/from/home/to/RISCVexport PATH=$PATH:$RISCV/bin</code></pre><p>Build the toolchain (this will take a while so make some tea or something)</p><pre><code>cd riscv-gnu-toolchainmkdir buildcd build../configure --prefix=$RISCV --with-arch=rv32imake</code></pre><p>Now, to build the Proxy Kernel</p><pre><code>cd ../riscv-pkmkdir buildcd build../configure --prefix=$RISCV --host=riscv32-unknown-elfmakemake install</code></pre><p>Finally to build Spike</p><pre><code>cd ../riscv-isa-simmkdir buildcd build../configure --prefix=$RISCV --enable-histogrammakemake install</code></pre><p>You are done!! To test if your install is working correctly use the following:</p><pre><code>riscv32-unknown-elf-gcc helloworld.c # where helloworld.c is any C programRISCV/riscv-isa-sim/build/spike --isa=RV32IMAC RISCV/riscv-pk/build/pk a.out</code></pre>",
            "url": "prydt.xyz/b/2020/06/16/installing-spike.html",
            
            
            
            "tags": ["riscv","linux"],
            
            "date_published": "2020-06-16T00:00:00-05:00",
            "date_modified": "2020-06-16T00:00:00-05:00",
            
                "author":  {
                "name": "Pranoy Dutta",
                "url": "prydt.xyz",
                "avatar": null
                }
                
            
        },
    
        {
            "id": "prydt.xyz/b/2020/05/31/making-a-blog.html",
            "title": "Introductions | Making a Blog!",
            "summary": "An Introduction",
            "content_text": "I’m committing to writing a blog. This may or may not be my 3rd attempt and I’m just going to go and stick with it. I think that’s the best course of action. Previously, I was too caught up with what static site generator to use or exactly what to post and this time I’m just sticking with something basic and will continue.My set up for blogging is rather simple. I’m using Jekyll which is not the newest or flashiest static site generator but it gets the job done. The theme I am using is called Sidey and I personally think it looks amazing.I suppose that’s it for now. This is just the first post.– pry",
            "content_html": "<p>I’m committing to writing a blog. This may or may not be my 3rd attempt and I’m just going to go and stick with it. I think that’s the best course of action. Previously, I was too caught up with what static site generator to use or exactly what to post and this time I’m just sticking with something basic and will continue.</p><p>My set up for blogging is rather simple. I’m using <a href=\"https://jekyllrb.com/\">Jekyll</a> which is not the newest or flashiest static site generator but it gets the job done. The theme I am using is called <a href=\"https://github.com/ronv/sidey\">Sidey</a> and I personally think it looks amazing.</p><p>I suppose that’s it for now. This is just the first post.</p><p>– pry</p>",
            "url": "prydt.xyz/b/2020/05/31/making-a-blog.html",
            
            
            
            "tags": ["blogging","jekyll"],
            
            "date_published": "2020-05-31T00:00:00-05:00",
            "date_modified": "2020-05-31T00:00:00-05:00",
            
                "author":  {
                "name": "Pranoy Dutta",
                "url": "prydt.xyz",
                "avatar": null
                }
                
            
        }
    
    ]
}