<!DOCTYPE html><html lang="en" ><head><meta charset="UTF-8"><meta name="viewport" content="width=device-width, initial-scale=1.0"><meta name="generator" content="Jekyll v4.1.0" /><meta property="og:title" content="Pry’s Blog" /><meta name="author" content="Pranoy Dutta" /><meta property="og:locale" content="en_US" /><meta name="description" content="{ “version”: “https://jsonfeed.org/version/1”, “title”: “Pry’s Blog”, “home_page_url”: “prydt.xyz/b/”, “feed_url”: “prydt.xyz/b/feed.json”, “description”: “It’s a blog… what more can I say?”, “icon”: “prydt.xyz/b/apple-touch-icon.png”, “favicon”: “prydt.xyz/b/favicon.ico”, “expired”: false, &quot;author&quot;: { &quot;name&quot;: &quot;Pranoy Dutta&quot;, &quot;url&quot;: &quot;prydt.xyz&quot;, &quot;avatar&quot;: null }, “items”: [ { &quot;id&quot;: &quot;prydt.xyz/b/2020/06/16/installing-spike.html&quot;, &quot;title&quot;: &quot;Installing the Spike RISC-V Simulator&quot;, &quot;summary&quot;: &quot;How to install Spike on a Linux distro&quot;, &quot;content_text&quot;: &quot;Spike is a RISC-V Simulator. Here are the steps to installing Spike from source for 32bit simulation.Dependencies: Device Tree Compiler# Arch Linuxsudo pacman -S dtc# Ubuntu / Debiansudo apt install device-tree-compilerInstalling Spike# Make a new directory for Spikemkdir RISCVcd RISCV# Clone the repos for the RISCV GNU toolchain, proxy kernel (pk), and Spike itselfgit clone --recursive https://github.com/riscv/riscv-gnu-toolchaingit clone https://github.com/riscv/riscv-pkgit clone https://github.com/riscv/riscv-isa-sim# Set environment variables (preferably move these commands into bashrc, zshrc, or something similar)export RISCV=/path/from/home/to/RISCVexport PATH=$PATH:$RISCV/bin# Build the toolchain (this will take a while so make some tea or something)cd riscv-gnu-toolchainmkdir buildcd build../configure --prefix=$RISCV --with-arch=rv32imake# Now, to build the Proxy Kernelcd ../riscv-pkmkdir buildcd build../configure --prefix=$RISCV --host=riscv32-unknown-elfmakemake install# Finally to build Spikecd ../riscv-isa-simmkdir buildcd build../configure --prefix=$RISCV --enable-histogrammakemake install# You are done!! To test if your install is working correctly# use the following:riscv32-unknown-elf-gcc helloworld.cRISCV/riscv-isa-sim/build/spike --isa=RV32IMAC RISCV/riscv-pk/build/pk a.out&quot;, &quot;content_html&quot;: &quot;&lt;p&gt;Spike is a RISC-V Simulator. Here are the steps to installing Spike from source for 32bit simulation.&lt;/p&gt;&lt;p&gt;Dependencies:&lt;/p&gt;&lt;ul&gt; &lt;li&gt;Device Tree Compiler&lt;/li&gt;&lt;/ul&gt;&lt;pre&gt;&lt;code class=\&quot;language-commandline\&quot;&gt;# Arch Linuxsudo pacman -S dtc# Ubuntu / Debiansudo apt install device-tree-compiler&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=\&quot;installing-spike\&quot;&gt;Installing Spike&lt;/h2&gt;&lt;pre&gt;&lt;code&gt;# Make a new directory for Spikemkdir RISCVcd RISCV# Clone the repos for the RISCV GNU toolchain, proxy kernel (pk), and Spike itselfgit clone --recursive https://github.com/riscv/riscv-gnu-toolchaingit clone https://github.com/riscv/riscv-pkgit clone https://github.com/riscv/riscv-isa-sim# Set environment variables (preferably move these commands into bashrc, zshrc, or something similar)export RISCV=/path/from/home/to/RISCVexport PATH=$PATH:$RISCV/bin# Build the toolchain (this will take a while so make some tea or something)cd riscv-gnu-toolchainmkdir buildcd build../configure --prefix=$RISCV --with-arch=rv32imake# Now, to build the Proxy Kernelcd ../riscv-pkmkdir buildcd build../configure --prefix=$RISCV --host=riscv32-unknown-elfmakemake install# Finally to build Spikecd ../riscv-isa-simmkdir buildcd build../configure --prefix=$RISCV --enable-histogrammakemake install# You are done!! To test if your install is working correctly# use the following:riscv32-unknown-elf-gcc helloworld.cRISCV/riscv-isa-sim/build/spike --isa=RV32IMAC RISCV/riscv-pk/build/pk a.out&lt;/code&gt;&lt;/pre&gt;&quot;, &quot;url&quot;: &quot;prydt.xyz/b/2020/06/16/installing-spike.html&quot;, &quot;tags&quot;: [&quot;riscv&quot;,&quot;linux&quot;], &quot;date_published&quot;: &quot;2020-06-16T00:00:00-05:00&quot;, &quot;date_modified&quot;: &quot;2020-06-16T00:00:00-05:00&quot;, &quot;author&quot;: { &quot;name&quot;: &quot;Pranoy Dutta&quot;, &quot;url&quot;: &quot;prydt.xyz&quot;, &quot;avatar&quot;: null } }, { &quot;id&quot;: &quot;prydt.xyz/b/2020/05/31/making-a-blog.html&quot;, &quot;title&quot;: &quot;Introductions | Making a Blog!&quot;, &quot;summary&quot;: &quot;An Introduction&quot;, &quot;content_text&quot;: &quot;I’m committing to writing a blog. This may or may not be my 3rd attempt and I’m just going to go and stick with it. I think that’s the best course of action. Previously, I was too caught up with what static site generator to use or exactly what to post and this time I’m just sticking with something basic and will continue.My set up for blogging is rather simple. I’m using Jekyll which is not the newest or flashiest static site generator but it gets the job done. The theme I am using is called Sidey and I personally think it looks amazing.I suppose that’s it for now. This is just the first post.– pry&quot;, &quot;content_html&quot;: &quot;&lt;p&gt;I’m committing to writing a blog. This may or may not be my 3rd attempt and I’m just going to go and stick with it. I think that’s the best course of action. Previously, I was too caught up with what static site generator to use or exactly what to post and this time I’m just sticking with something basic and will continue.&lt;/p&gt;&lt;p&gt;My set up for blogging is rather simple. I’m using &lt;a href=\&quot;https://jekyllrb.com/\&quot;&gt;Jekyll&lt;/a&gt; which is not the newest or flashiest static site generator but it gets the job done. The theme I am using is called &lt;a href=\&quot;https://github.com/ronv/sidey\&quot;&gt;Sidey&lt;/a&gt; and I personally think it looks amazing.&lt;/p&gt;&lt;p&gt;I suppose that’s it for now. This is just the first post.&lt;/p&gt;&lt;p&gt;– pry&lt;/p&gt;&quot;, &quot;url&quot;: &quot;prydt.xyz/b/2020/05/31/making-a-blog.html&quot;, &quot;tags&quot;: [&quot;blogging&quot;,&quot;jekyll&quot;], &quot;date_published&quot;: &quot;2020-05-31T00:00:00-05:00&quot;, &quot;date_modified&quot;: &quot;2020-05-31T00:00:00-05:00&quot;, &quot;author&quot;: { &quot;name&quot;: &quot;Pranoy Dutta&quot;, &quot;url&quot;: &quot;prydt.xyz&quot;, &quot;avatar&quot;: null } } ] }" /><meta property="og:description" content="{ “version”: “https://jsonfeed.org/version/1”, “title”: “Pry’s Blog”, “home_page_url”: “prydt.xyz/b/”, “feed_url”: “prydt.xyz/b/feed.json”, “description”: “It’s a blog… what more can I say?”, “icon”: “prydt.xyz/b/apple-touch-icon.png”, “favicon”: “prydt.xyz/b/favicon.ico”, “expired”: false, &quot;author&quot;: { &quot;name&quot;: &quot;Pranoy Dutta&quot;, &quot;url&quot;: &quot;prydt.xyz&quot;, &quot;avatar&quot;: null }, “items”: [ { &quot;id&quot;: &quot;prydt.xyz/b/2020/06/16/installing-spike.html&quot;, &quot;title&quot;: &quot;Installing the Spike RISC-V Simulator&quot;, &quot;summary&quot;: &quot;How to install Spike on a Linux distro&quot;, &quot;content_text&quot;: &quot;Spike is a RISC-V Simulator. Here are the steps to installing Spike from source for 32bit simulation.Dependencies: Device Tree Compiler# Arch Linuxsudo pacman -S dtc# Ubuntu / Debiansudo apt install device-tree-compilerInstalling Spike# Make a new directory for Spikemkdir RISCVcd RISCV# Clone the repos for the RISCV GNU toolchain, proxy kernel (pk), and Spike itselfgit clone --recursive https://github.com/riscv/riscv-gnu-toolchaingit clone https://github.com/riscv/riscv-pkgit clone https://github.com/riscv/riscv-isa-sim# Set environment variables (preferably move these commands into bashrc, zshrc, or something similar)export RISCV=/path/from/home/to/RISCVexport PATH=$PATH:$RISCV/bin# Build the toolchain (this will take a while so make some tea or something)cd riscv-gnu-toolchainmkdir buildcd build../configure --prefix=$RISCV --with-arch=rv32imake# Now, to build the Proxy Kernelcd ../riscv-pkmkdir buildcd build../configure --prefix=$RISCV --host=riscv32-unknown-elfmakemake install# Finally to build Spikecd ../riscv-isa-simmkdir buildcd build../configure --prefix=$RISCV --enable-histogrammakemake install# You are done!! To test if your install is working correctly# use the following:riscv32-unknown-elf-gcc helloworld.cRISCV/riscv-isa-sim/build/spike --isa=RV32IMAC RISCV/riscv-pk/build/pk a.out&quot;, &quot;content_html&quot;: &quot;&lt;p&gt;Spike is a RISC-V Simulator. Here are the steps to installing Spike from source for 32bit simulation.&lt;/p&gt;&lt;p&gt;Dependencies:&lt;/p&gt;&lt;ul&gt; &lt;li&gt;Device Tree Compiler&lt;/li&gt;&lt;/ul&gt;&lt;pre&gt;&lt;code class=\&quot;language-commandline\&quot;&gt;# Arch Linuxsudo pacman -S dtc# Ubuntu / Debiansudo apt install device-tree-compiler&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=\&quot;installing-spike\&quot;&gt;Installing Spike&lt;/h2&gt;&lt;pre&gt;&lt;code&gt;# Make a new directory for Spikemkdir RISCVcd RISCV# Clone the repos for the RISCV GNU toolchain, proxy kernel (pk), and Spike itselfgit clone --recursive https://github.com/riscv/riscv-gnu-toolchaingit clone https://github.com/riscv/riscv-pkgit clone https://github.com/riscv/riscv-isa-sim# Set environment variables (preferably move these commands into bashrc, zshrc, or something similar)export RISCV=/path/from/home/to/RISCVexport PATH=$PATH:$RISCV/bin# Build the toolchain (this will take a while so make some tea or something)cd riscv-gnu-toolchainmkdir buildcd build../configure --prefix=$RISCV --with-arch=rv32imake# Now, to build the Proxy Kernelcd ../riscv-pkmkdir buildcd build../configure --prefix=$RISCV --host=riscv32-unknown-elfmakemake install# Finally to build Spikecd ../riscv-isa-simmkdir buildcd build../configure --prefix=$RISCV --enable-histogrammakemake install# You are done!! To test if your install is working correctly# use the following:riscv32-unknown-elf-gcc helloworld.cRISCV/riscv-isa-sim/build/spike --isa=RV32IMAC RISCV/riscv-pk/build/pk a.out&lt;/code&gt;&lt;/pre&gt;&quot;, &quot;url&quot;: &quot;prydt.xyz/b/2020/06/16/installing-spike.html&quot;, &quot;tags&quot;: [&quot;riscv&quot;,&quot;linux&quot;], &quot;date_published&quot;: &quot;2020-06-16T00:00:00-05:00&quot;, &quot;date_modified&quot;: &quot;2020-06-16T00:00:00-05:00&quot;, &quot;author&quot;: { &quot;name&quot;: &quot;Pranoy Dutta&quot;, &quot;url&quot;: &quot;prydt.xyz&quot;, &quot;avatar&quot;: null } }, { &quot;id&quot;: &quot;prydt.xyz/b/2020/05/31/making-a-blog.html&quot;, &quot;title&quot;: &quot;Introductions | Making a Blog!&quot;, &quot;summary&quot;: &quot;An Introduction&quot;, &quot;content_text&quot;: &quot;I’m committing to writing a blog. This may or may not be my 3rd attempt and I’m just going to go and stick with it. I think that’s the best course of action. Previously, I was too caught up with what static site generator to use or exactly what to post and this time I’m just sticking with something basic and will continue.My set up for blogging is rather simple. I’m using Jekyll which is not the newest or flashiest static site generator but it gets the job done. The theme I am using is called Sidey and I personally think it looks amazing.I suppose that’s it for now. This is just the first post.– pry&quot;, &quot;content_html&quot;: &quot;&lt;p&gt;I’m committing to writing a blog. This may or may not be my 3rd attempt and I’m just going to go and stick with it. I think that’s the best course of action. Previously, I was too caught up with what static site generator to use or exactly what to post and this time I’m just sticking with something basic and will continue.&lt;/p&gt;&lt;p&gt;My set up for blogging is rather simple. I’m using &lt;a href=\&quot;https://jekyllrb.com/\&quot;&gt;Jekyll&lt;/a&gt; which is not the newest or flashiest static site generator but it gets the job done. The theme I am using is called &lt;a href=\&quot;https://github.com/ronv/sidey\&quot;&gt;Sidey&lt;/a&gt; and I personally think it looks amazing.&lt;/p&gt;&lt;p&gt;I suppose that’s it for now. This is just the first post.&lt;/p&gt;&lt;p&gt;– pry&lt;/p&gt;&quot;, &quot;url&quot;: &quot;prydt.xyz/b/2020/05/31/making-a-blog.html&quot;, &quot;tags&quot;: [&quot;blogging&quot;,&quot;jekyll&quot;], &quot;date_published&quot;: &quot;2020-05-31T00:00:00-05:00&quot;, &quot;date_modified&quot;: &quot;2020-05-31T00:00:00-05:00&quot;, &quot;author&quot;: { &quot;name&quot;: &quot;Pranoy Dutta&quot;, &quot;url&quot;: &quot;prydt.xyz&quot;, &quot;avatar&quot;: null } } ] }" /><link rel="canonical" href="prydt.xyz/b/feed.json" /><meta property="og:url" content="prydt.xyz/b/feed.json" /><meta property="og:site_name" content="Pry’s Blog" /> <script type="application/ld+json"> {"headline":"Pry’s Blog","url":"prydt.xyz/b/feed.json","@type":"WebPage","author":{"@type":"Person","name":"Pranoy Dutta"},"description":"{ “version”: “https://jsonfeed.org/version/1”, “title”: “Pry’s Blog”, “home_page_url”: “prydt.xyz/b/”, “feed_url”: “prydt.xyz/b/feed.json”, “description”: “It’s a blog… what more can I say?”, “icon”: “prydt.xyz/b/apple-touch-icon.png”, “favicon”: “prydt.xyz/b/favicon.ico”, “expired”: false, &quot;author&quot;: { &quot;name&quot;: &quot;Pranoy Dutta&quot;, &quot;url&quot;: &quot;prydt.xyz&quot;, &quot;avatar&quot;: null }, “items”: [ { &quot;id&quot;: &quot;prydt.xyz/b/2020/06/16/installing-spike.html&quot;, &quot;title&quot;: &quot;Installing the Spike RISC-V Simulator&quot;, &quot;summary&quot;: &quot;How to install Spike on a Linux distro&quot;, &quot;content_text&quot;: &quot;Spike is a RISC-V Simulator. Here are the steps to installing Spike from source for 32bit simulation.Dependencies: Device Tree Compiler# Arch Linuxsudo pacman -S dtc# Ubuntu / Debiansudo apt install device-tree-compilerInstalling Spike# Make a new directory for Spikemkdir RISCVcd RISCV# Clone the repos for the RISCV GNU toolchain, proxy kernel (pk), and Spike itselfgit clone --recursive https://github.com/riscv/riscv-gnu-toolchaingit clone https://github.com/riscv/riscv-pkgit clone https://github.com/riscv/riscv-isa-sim# Set environment variables (preferably move these commands into bashrc, zshrc, or something similar)export RISCV=/path/from/home/to/RISCVexport PATH=$PATH:$RISCV/bin# Build the toolchain (this will take a while so make some tea or something)cd riscv-gnu-toolchainmkdir buildcd build../configure --prefix=$RISCV --with-arch=rv32imake# Now, to build the Proxy Kernelcd ../riscv-pkmkdir buildcd build../configure --prefix=$RISCV --host=riscv32-unknown-elfmakemake install# Finally to build Spikecd ../riscv-isa-simmkdir buildcd build../configure --prefix=$RISCV --enable-histogrammakemake install# You are done!! To test if your install is working correctly# use the following:riscv32-unknown-elf-gcc helloworld.cRISCV/riscv-isa-sim/build/spike --isa=RV32IMAC RISCV/riscv-pk/build/pk a.out&quot;, &quot;content_html&quot;: &quot;&lt;p&gt;Spike is a RISC-V Simulator. Here are the steps to installing Spike from source for 32bit simulation.&lt;/p&gt;&lt;p&gt;Dependencies:&lt;/p&gt;&lt;ul&gt; &lt;li&gt;Device Tree Compiler&lt;/li&gt;&lt;/ul&gt;&lt;pre&gt;&lt;code class=\\&quot;language-commandline\\&quot;&gt;# Arch Linuxsudo pacman -S dtc# Ubuntu / Debiansudo apt install device-tree-compiler&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=\\&quot;installing-spike\\&quot;&gt;Installing Spike&lt;/h2&gt;&lt;pre&gt;&lt;code&gt;# Make a new directory for Spikemkdir RISCVcd RISCV# Clone the repos for the RISCV GNU toolchain, proxy kernel (pk), and Spike itselfgit clone --recursive https://github.com/riscv/riscv-gnu-toolchaingit clone https://github.com/riscv/riscv-pkgit clone https://github.com/riscv/riscv-isa-sim# Set environment variables (preferably move these commands into bashrc, zshrc, or something similar)export RISCV=/path/from/home/to/RISCVexport PATH=$PATH:$RISCV/bin# Build the toolchain (this will take a while so make some tea or something)cd riscv-gnu-toolchainmkdir buildcd build../configure --prefix=$RISCV --with-arch=rv32imake# Now, to build the Proxy Kernelcd ../riscv-pkmkdir buildcd build../configure --prefix=$RISCV --host=riscv32-unknown-elfmakemake install# Finally to build Spikecd ../riscv-isa-simmkdir buildcd build../configure --prefix=$RISCV --enable-histogrammakemake install# You are done!! To test if your install is working correctly# use the following:riscv32-unknown-elf-gcc helloworld.cRISCV/riscv-isa-sim/build/spike --isa=RV32IMAC RISCV/riscv-pk/build/pk a.out&lt;/code&gt;&lt;/pre&gt;&quot;, &quot;url&quot;: &quot;prydt.xyz/b/2020/06/16/installing-spike.html&quot;, &quot;tags&quot;: [&quot;riscv&quot;,&quot;linux&quot;], &quot;date_published&quot;: &quot;2020-06-16T00:00:00-05:00&quot;, &quot;date_modified&quot;: &quot;2020-06-16T00:00:00-05:00&quot;, &quot;author&quot;: { &quot;name&quot;: &quot;Pranoy Dutta&quot;, &quot;url&quot;: &quot;prydt.xyz&quot;, &quot;avatar&quot;: null } }, { &quot;id&quot;: &quot;prydt.xyz/b/2020/05/31/making-a-blog.html&quot;, &quot;title&quot;: &quot;Introductions | Making a Blog!&quot;, &quot;summary&quot;: &quot;An Introduction&quot;, &quot;content_text&quot;: &quot;I’m committing to writing a blog. This may or may not be my 3rd attempt and I’m just going to go and stick with it. I think that’s the best course of action. Previously, I was too caught up with what static site generator to use or exactly what to post and this time I’m just sticking with something basic and will continue.My set up for blogging is rather simple. I’m using Jekyll which is not the newest or flashiest static site generator but it gets the job done. The theme I am using is called Sidey and I personally think it looks amazing.I suppose that’s it for now. This is just the first post.– pry&quot;, &quot;content_html&quot;: &quot;&lt;p&gt;I’m committing to writing a blog. This may or may not be my 3rd attempt and I’m just going to go and stick with it. I think that’s the best course of action. Previously, I was too caught up with what static site generator to use or exactly what to post and this time I’m just sticking with something basic and will continue.&lt;/p&gt;&lt;p&gt;My set up for blogging is rather simple. I’m using &lt;a href=\\&quot;https://jekyllrb.com/\\&quot;&gt;Jekyll&lt;/a&gt; which is not the newest or flashiest static site generator but it gets the job done. The theme I am using is called &lt;a href=\\&quot;https://github.com/ronv/sidey\\&quot;&gt;Sidey&lt;/a&gt; and I personally think it looks amazing.&lt;/p&gt;&lt;p&gt;I suppose that’s it for now. This is just the first post.&lt;/p&gt;&lt;p&gt;– pry&lt;/p&gt;&quot;, &quot;url&quot;: &quot;prydt.xyz/b/2020/05/31/making-a-blog.html&quot;, &quot;tags&quot;: [&quot;blogging&quot;,&quot;jekyll&quot;], &quot;date_published&quot;: &quot;2020-05-31T00:00:00-05:00&quot;, &quot;date_modified&quot;: &quot;2020-05-31T00:00:00-05:00&quot;, &quot;author&quot;: { &quot;name&quot;: &quot;Pranoy Dutta&quot;, &quot;url&quot;: &quot;prydt.xyz&quot;, &quot;avatar&quot;: null } } ] }","@context":"https://schema.org"}</script><title> Pry&#39;s Blog - It&#39;s a blog... what more can I say?</title><link rel="shortcut icon" href="/b/favicon.png"><link rel="alternate" type="application/atom+xml" title="Pry's Blog" href="/b/atom.xml"><link rel="alternate" type="application/json" title="Pry's Blog" href="prydt.xyz/b/feed.json" /><link rel="sitemap" type="application/xml" title="sitemap" href="/b/sitemap.xml" /><style> *,:after,:before{box-sizing:border-box;background-color:inherit;color:inherit;margin:0;padding:0}body{font-family:system-ui, sans-serif;-webkit-font-smoothing:antialiased;text-rendering:optimizeLegibility;line-height:1.5;font-size:1rem;color:#16171a}nav ul{border-right:1px solid #edf2f7}a{color:#000;text-decoration-skip-ink:auto;text-decoration:underline}pre{margin:.5rem 0;padding:.5rem}.post p{margin:.5rem 0}.post h1,.post h2,.post h3,.post h4{margin:1rem 0}.post h2:first-child,.project h2:first-child,.photo h2:first-child{margin-top:0}.meta{margin:2rem 0}code,pre{background:#ecedee}code{padding:.1rem}pre code{border:none}pre{padding:1rem;overflow-x:auto}img{max-width:100%}hr{background:#000;height:1px;border:0}header{flex-basis:10rem;flex-grow:1;position:relative}header a{text-decoration:none}header li{margin-bottom:.2rem;text-align:right;margin-right:2rem}header a.active{font-weight:bold}header,section{padding:1rem}blockquote{font-style:italic;border-left:5px solid #ececec;padding-left:1rem}h1,h2,h3,h4,h5{line-height:1;margin:1rem 0;font-weight:600}section h1:first-child{margin-top:0}strong,b{font-weight:bold}.photos ul{list-style:none}.photos li{margin-bottom:1.5rem}.photo picture,.project picture{margin-bottom:0.5rem}.posts ul,header ul{list-style:none}.posts li{align-items:center;display:flex;justify-content:space-between;margin-bottom:.5rem}.posts li a,.posts li div,.projects li a{white-space:nowrap;overflow:hidden;text-overflow:ellipsis;text-decoration:none}.posts li time,.projects li time{padding-left:1rem;white-space:nowrap;font-variant-numeric:tabular-nums}main{display:flex;flex-wrap:wrap;max-width:60rem;margin:2rem auto;padding:1rem}@media screen and (max-width: 45rem){header li{display:inline;margin-right:1rem}.logo{padding-bottom:1rem}header ul{border-bottom:1px solid #edf2f7;padding-bottom:2rem}nav ul{border-right:0px}.photos ul{margin-top:0.5rem}}section{flex-basis:0;flex-grow:999;min-width:70%;display:flex;flex-direction:column}figcaption{font-size:smaller}</style></head><body><main role="main"><header role="banner"> <!--<h1 class="logo">Pry's Blog</h1>--><nav role="navigation"><ul><li><a href="/b" >Writing</a></li><li><a href="/b/about.html" >About</a></li><li><a href="/b/search.html" >Search</a></li><li><a href="/b/atom.xml" >Rss</a></li></ul></nav></header><section class="post"><h2></h2>{ "version": "https://jsonfeed.org/version/1", "title": "Pry's Blog", "home_page_url": "prydt.xyz/b/", "feed_url": "prydt.xyz/b/feed.json", "description": "It's a blog... what more can I say?", "icon": "prydt.xyz/b/apple-touch-icon.png", "favicon": "prydt.xyz/b/favicon.ico", "expired": false, "author": { "name": "Pranoy Dutta", "url": "prydt.xyz", "avatar": null }, "items": [ { "id": "prydt.xyz/b/2020/06/16/installing-spike.html", "title": "Installing the Spike RISC-V Simulator", "summary": "How to install Spike on a Linux distro", "content_text": "Spike is a RISC-V Simulator. Here are the steps to installing Spike from source for 32bit simulation.Dependencies: Device Tree Compiler# Arch Linuxsudo pacman -S dtc# Ubuntu / Debiansudo apt install device-tree-compilerInstalling Spike# Make a new directory for Spikemkdir RISCVcd RISCV# Clone the repos for the RISCV GNU toolchain, proxy kernel (pk), and Spike itselfgit clone --recursive https://github.com/riscv/riscv-gnu-toolchaingit clone https://github.com/riscv/riscv-pkgit clone https://github.com/riscv/riscv-isa-sim# Set environment variables (preferably move these commands into bashrc, zshrc, or something similar)export RISCV=/path/from/home/to/RISCVexport PATH=$PATH:$RISCV/bin# Build the toolchain (this will take a while so make some tea or something)cd riscv-gnu-toolchainmkdir buildcd build../configure --prefix=$RISCV --with-arch=rv32imake# Now, to build the Proxy Kernelcd ../riscv-pkmkdir buildcd build../configure --prefix=$RISCV --host=riscv32-unknown-elfmakemake install# Finally to build Spikecd ../riscv-isa-simmkdir buildcd build../configure --prefix=$RISCV --enable-histogrammakemake install# You are done!! To test if your install is working correctly# use the following:riscv32-unknown-elf-gcc helloworld.cRISCV/riscv-isa-sim/build/spike --isa=RV32IMAC RISCV/riscv-pk/build/pk a.out", "content_html": "<p>Spike is a RISC-V Simulator. Here are the steps to installing Spike from source for 32bit simulation.</p><p>Dependencies:</p><ul><li>Device Tree Compiler</li></ul><pre><code class=\"language-commandline\"># Arch Linuxsudo pacman -S dtc# Ubuntu / Debiansudo apt install device-tree-compiler</code></pre><h2 id=\"installing-spike\">Installing Spike</h2><pre><code># Make a new directory for Spikemkdir RISCVcd RISCV# Clone the repos for the RISCV GNU toolchain, proxy kernel (pk), and Spike itselfgit clone --recursive https://github.com/riscv/riscv-gnu-toolchaingit clone https://github.com/riscv/riscv-pkgit clone https://github.com/riscv/riscv-isa-sim# Set environment variables (preferably move these commands into bashrc, zshrc, or something similar)export RISCV=/path/from/home/to/RISCVexport PATH=$PATH:$RISCV/bin# Build the toolchain (this will take a while so make some tea or something)cd riscv-gnu-toolchainmkdir buildcd build../configure --prefix=$RISCV --with-arch=rv32imake# Now, to build the Proxy Kernelcd ../riscv-pkmkdir buildcd build../configure --prefix=$RISCV --host=riscv32-unknown-elfmakemake install# Finally to build Spikecd ../riscv-isa-simmkdir buildcd build../configure --prefix=$RISCV --enable-histogrammakemake install# You are done!! To test if your install is working correctly# use the following:riscv32-unknown-elf-gcc helloworld.cRISCV/riscv-isa-sim/build/spike --isa=RV32IMAC RISCV/riscv-pk/build/pk a.out</code></pre>", "url": "prydt.xyz/b/2020/06/16/installing-spike.html", "tags": ["riscv","linux"], "date_published": "2020-06-16T00:00:00-05:00", "date_modified": "2020-06-16T00:00:00-05:00", "author": { "name": "Pranoy Dutta", "url": "prydt.xyz", "avatar": null } }, { "id": "prydt.xyz/b/2020/05/31/making-a-blog.html", "title": "Introductions | Making a Blog!", "summary": "An Introduction", "content_text": "I’m committing to writing a blog. This may or may not be my 3rd attempt and I’m just going to go and stick with it. I think that’s the best course of action. Previously, I was too caught up with what static site generator to use or exactly what to post and this time I’m just sticking with something basic and will continue.My set up for blogging is rather simple. I’m using Jekyll which is not the newest or flashiest static site generator but it gets the job done. The theme I am using is called Sidey and I personally think it looks amazing.I suppose that’s it for now. This is just the first post.– pry", "content_html": "<p>I’m committing to writing a blog. This may or may not be my 3rd attempt and I’m just going to go and stick with it. I think that’s the best course of action. Previously, I was too caught up with what static site generator to use or exactly what to post and this time I’m just sticking with something basic and will continue.</p><p>My set up for blogging is rather simple. I’m using <a href=\"https://jekyllrb.com/\">Jekyll</a> which is not the newest or flashiest static site generator but it gets the job done. The theme I am using is called <a href=\"https://github.com/ronv/sidey\">Sidey</a> and I personally think it looks amazing.</p><p>I suppose that’s it for now. This is just the first post.</p><p>– pry</p>", "url": "prydt.xyz/b/2020/05/31/making-a-blog.html", "tags": ["blogging","jekyll"], "date_published": "2020-05-31T00:00:00-05:00", "date_modified": "2020-05-31T00:00:00-05:00", "author": { "name": "Pranoy Dutta", "url": "prydt.xyz", "avatar": null } } ] }</section></main></body></html>
